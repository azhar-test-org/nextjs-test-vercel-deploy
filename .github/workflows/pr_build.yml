name: Build React App and Deploy to Netlify Preview Environment

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Test and Build Artifact
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Client
      run: npm ci

    - name: Test Client
      run: npm test -- --passWithNoTests

    - name: Build Client
      run: npm run build
      
    - name: ðŸš€ Deploy to Netlify Preview Env
      id: run_tests
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        # DEPLOYMENT_ALIAS: ${{ github.head_ref }}
#         DEPLOYMENT_ALIAS: stage
      run: |
        echo "::set-output name=deployed_url::$(npx netlify-cli deploy --build --site "$NETLIFY_SITE_ID" --auth "$NETLIFY_AUTH_TOKEN" --open | grep -oP '(?<=Website Draft URL: ).*' | xargs)"

    # - name : op
    #   env:
    #     MY: ${{join(steps.run_tests.outputs.*, '\n')}}
    #   run: echo 'asd'
        
    # Publish the inspect and preview link to the PR
    # - name: ðŸ‘“ Netlify Preview URL
    #   uses: unsplash/comment-on-pr@master
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     OUTPUT: "ðŸš€ Netlify Preview Deployment: ${{join(steps.run_tests.outputs.*, '\n')}}"
    #   with:
    #     msg: ${{ env.OUTPUT }}
    #     check_for_duplicate_msg: false


    - name: Find Comment
      uses: peter-evans/find-comment@v1
      id: find_comment
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body-includes: Netlify Preview Deployment

    - name: Create comment
      if: steps.find_comment.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          "ðŸš€ Netlify Preview Deployment: ${{join(steps.run_tests.outputs.*, '\n')}}"

    - name: Update comment
      if: steps.find_comment.outputs.comment-id != ''
      uses: peter-evans/create-or-update-comment@v1
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body: |
          "ðŸš€ Netlify Preview Deployment: ${{join(steps.run_tests.outputs.*, '\n')}}"